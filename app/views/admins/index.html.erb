<!-- <script src="../assets/javascripts/Chart.bundle.js"></script> -->
<!-- <script src="../assets/javascripts/utils.js"></script> -->

<div class="admin space" onload="test()">
  <div class="container custom_container">
    <div class="row">
      <div class="col-sm-2 vertical_nav">
        <div class="sidebar-nav">
          <div class="navbar navbar-default" role="navigation">
            <div class="navbar-collapse collapse sidebar-navbar-collapse">
              <ul class="nav navbar-nav">
                <li class="active"><%= link_to "Profile", '/admins', method: :get%></li>
                <li ><%= link_to "Manage courses", '/admins/manage_courses'%></li>
                <li><%= link_to "Manage instructors", '/admins/manage_instructors'%></li>
              </ul>
            </div><!--/.nav-collapse -->
          </div>
        </div>
      </div>

      <div class="col-sm-6">
        <h1 class="topic">Hi <%= current_admin.firstname%>, welcome back!</h1>
        <%= button_to "Edit", edit_admin_registration_path,class: "btn btn-default admin_profile", :method => :get  %>
        <div class="admin_profile">
          <h3>Username : <%= current_admin.email%></h3>
        </div>
      </div>

      <div class="col-sm-3">
        <div id="canvas-holder" style="width:195%">
            <canvas class="custom_canvas" id="chart-area"></canvas>
        </div>
        <!-- <button id="randomizeData">Randomize Data</button> -->
        <button style="display:none;" id="addData">Add Data</button>
        <!-- <button id="removeData">Remove Data</button> -->
      </div>



    </div><!-- end row -->
  </div> <!-- end custom_container -->
</div>

<script>
  var randomScalingFactor = function() {
      return Math.round(Math.random() * 100);
  };

  var test = function () {
    console.log("test");

  }

  var chartColors = window.chartColors;
  var color = Chart.helpers.color;
  var config = {
      data: {
          datasets: [{
              data: [
                  // randomScalingFactor(),
                  // randomScalingFactor(),
                  // randomScalingFactor(),
                  // randomScalingFactor(),
                  // randomScalingFactor(),
              ],
              backgroundColor: [
                  color(chartColors.red).alpha(0.5).rgbString(),
                  color(chartColors.orange).alpha(0.5).rgbString(),
                  color(chartColors.yellow).alpha(0.5).rgbString(),
                  color(chartColors.green).alpha(0.5).rgbString(),
                  color(chartColors.blue).alpha(0.5).rgbString(),
              ],
              label: 'My dataset' // for legend
          }],
          labels: [
              // "Red",
              // "Orange",
              // "Yellow",
              // "Green",
              // "Blue"
          ]
      },
      options: {
          responsive: true,
          legend: {
              position: 'right',
          },
          title: {
              display: true,
              text: 'Overall graph of classes'
          },
          scale: {
            ticks: {
              beginAtZero: true
            },
            reverse: false
          },
          animation: {
              animateRotate: false,
              animateScale: true
          }
      }
  };

  window.onload = function() {
      var ctx = document.getElementById("chart-area");
      // addInfo(config.data.datasets.data ,config.data.labels)
      window.myPolarArea = Chart.PolarArea(ctx, config);
      var l = document.getElementById('addData');
      l.click();

  };

  var colorNames = Object.keys(window.chartColors);
  document.getElementById('addData').addEventListener('click', function() {
    var courses = JSON.parse(<%= @courses.to_json.to_s.html_safe %>);
    // console.log(courses.length);
    if (config.data.datasets.length >= 0) {
      courses.map ( (course) => {
        if (course.students.length > 0){
          config.data.labels.push(course.coursename);
          // console.log(course.students.length);
          config.data.datasets.forEach(function(dataset) {
              var colorName = colorNames[config.data.labels.length % colorNames.length];
              dataset.backgroundColor.push(window.chartColors[colorName]);
              dataset.data.push(course.students.length);
          });
        }

      })
    window.myPolarArea.update();
    }
  });

</script>
